# 1 "wannaroo-extra-industries.pnml"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "wannaroo-extra-industries.pnml"
/* wannaroo-extra-industries.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

# 1 "src/header.pnml" 1
/* header.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

if (openttd_version < version_openttd(1, 9, 0)) {
 error(FATAL, REQUIRES_OPENTTD, "1.9.0");
}

/* This NewGRF currently does not work properly in toyland
 * climate. Disable it in that case
 */

if (climate == CLIMATE_TOYLAND) {
 error(FATAL, string(STR_ERR_NO_TOYLAND));
}

grf {
 grfid: "jdr\04";
 name: string(STR_GRF_NAME);
 desc: string(STR_GRF_DESCRIPTION);
 version: 1000;
 min_compatible_version: 1000;
 url: string(STR_GRF_URL);

 param {
  param_enable_distcenter {
   type: bool;
   def_value: 0;
   name: string(STR_PARAM_NAME_ENABLE_DISTCENTER);
   desc: string(STR_PARAM_DESC_ENABLE_DISTCENTER);
  }
 }

 param {
  param_enable_lumber_mill {
   type: bool;
   def_value: 0;
   name: string(STR_PARAM_NAME_ENABLE_LUMBER_MILL);
   desc: string(STR_PARAM_DESC_ENABLE_LUMBER_MILL);
  }
 }

 param {
  param_enable_distillery {
   type: bool;
   def_value: 0;
   name: string(STR_PARAM_NAME_ENABLE_DISTILLERY);
   desc: string(STR_PARAM_DESC_ENABLE_DISTILLERY);
  }
 }

 param {
  param_enable_petrol_plant {
   type: bool;
   def_value: 0;
   name: string(STR_PARAM_NAME_ENABLE_PETROL_PLANT);
   desc: string(STR_PARAM_DESC_ENABLE_PETROL_PLANT);
  }
 }

 param {
  param_enable_city_hall {
   type: bool;
   def_value: 0;
   name: string(STR_PARAM_NAME_ENABLE_CITY_HALL);
   desc: string(STR_PARAM_DESC_ENABLE_CITY_HALL);
  }
 }

 param {
  param_manual_placement {
   type: bool;
   def_value: 1;
   name: string(STR_PARAM_NAME_MANUAL_PLACEMENT);
   desc: string(STR_PARAM_DESC_MANUAL_PLACEMENT);
  }
 }

 param {
  param_closure_protect_time {
   type: int;
   min_value: 0;
   max_value: 600;
   def_value: 60;
   name: string(STR_PARAM_NAME_CLOSURE_PROTECTION_TIME);
   desc: string(STR_PARAM_DESC_CLOSURE_PROTECTION_TIME);
  }
 }

}

cargotable {FOOD, GOOD, PETR, GRAI, WHEA, MAIZ, FRUT, BEER, COAL, OIL_, WOOD, RFPR, BDMT, ENSP, FMSP, MNSP, TOUR, PASS}
# 9 "wannaroo-extra-industries.pnml" 2
# 1 "src/defcommon.pnml" 1
/* defcommon.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

// @TODO:
// 1. test closure/initialization logic
// 2. test dynamic output: hydrocrack







/* INDUSTRY TILE IDs

   concrete		    1
   DIST_CENTER		2-5
   DISTILLERY		6-9
   PETROL_PLANT		10-14
   CITY_HALL        15-16

*/

/* When we receive cargo, the counter (0x00) is reset, industry is initialised (0x0F). */
//produce(industry_blackhole_cargo_arrive_produce, waiting_cargo_1, waiting_cargo_2, waiting_cargo_3, 0, 0, [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00)]);

/* Every month the counter is increased if the industry has been initialised. */
switch (FEAT_INDUSTRIES, SELF, industry_monthly_prod_change_switch, STORE_PERM(LOAD_PERM(0x00) + LOAD_PERM(0x0F), 0x00)) {
 return CB_RESULT_IND_PROD_NO_CHANGE;
}

/* Only check industry closure if the counter is greater than param_closure_protect_time and industry closure is enabled. */
switch (FEAT_INDUSTRIES, SELF, industry_random_prod_change_switch, (param_closure_protect_time==0 ? 0 : LOAD_PERM(0x00))) {
 0..param_closure_protect_time: return CB_RESULT_IND_PROD_NO_CHANGE;
 return CB_RESULT_IND_PROD_CLOSE;
}

// remove cargo_subtype_display text from industry windows
// text is put there because we have a produce block
switch (FEAT_INDUSTRIES, SELF, industry_remove_cargo_text, getbits(extra_callback_info2, 0, 8)) {
 0: return 0x3800 + string(STR_EMPTY_STRING);
 1: return 0x3800 + string(STR_EMPTY_STRING);
 2: return 0x3800 + string(STR_EMPTY_STRING);
}
# 10 "wannaroo-extra-industries.pnml" 2
# 1 "src/location_checks.pnml" 1
/* location_checks.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

// @TODO: City Hall location checks: Superstore (for TOUR), Town Square, Hotel, Visitor Center

// max number of industries of a given type is proportional to map size, 256x256 = 3 (maps < 256x256 will have max 2 each type)
// affects distcenter, distillery, petrol plant
max_industries = max((map_size / (256 * 256)) * 3, 2);







// called in tile_industry_check
// the final tile check, only a negative result returned, no onward chain
// further checks are done by the industry
switch (FEAT_INDUSTRYTILES, SELF, tile_flat_check, nearby_tile_slope(0, 0)) {
 SLOPE_FLAT: return CB_RESULT_LOCATION_ALLOW;
 1..255: return string(STR_TILE_FLAT_CHECK_FAILED);
}

switch (FEAT_INDUSTRIES, SELF, town_distance_check_20, town_euclidean_dist(0, 0)) {
 0..399: return string(STR_INDUSTRY_TOO_CLOSE_TO_TOWN);
 return CB_RESULT_LOCATION_ALLOW;
}

// City Hall location checks
/*
switch (FEAT_INDUSTRIES, SELF, cityhall_check_location, (cargotype_available("TOUR") ? industry_distance(IND_SUPERSTORE) : 13)) {
        0..12: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
}
*/

// Distribution Center location checks
// not checking Lumber Mill (either default one or this newgrf one) for Wood: TMWFTLB
switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_foodprocplant, industry_distance(INDUSTRYTYPE_FOOD_PROCESSING_PLANT, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        town_distance_check_20;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_distillery, industry_distance(0x02)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_foodprocplant;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_hydrocrack, industry_distance(0x03)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_distillery;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_factory_tropic, industry_distance(INDUSTRYTYPE_TROPICAL_FACTORY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_hydrocrack;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_factory_arctic, industry_distance(INDUSTRYTYPE_PRINTING_WORKS, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_factory_tropic;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_factory_temp, industry_distance(INDUSTRYTYPE_TEMPERATE_FACTORY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_factory_arctic;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_oil_refinery, industry_distance(INDUSTRYTYPE_OIL_REFINERY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_factory_temp;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_forest, industry_distance(INDUSTRYTYPE_FOREST, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_oil_refinery;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_min_distance_distcenter, industry_distance(0x00)) {
        0..49: return CB_RESULT_LOCATION_DISALLOW;
        distcenter_min_distance_forest;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_count, industry_count(0x00) < max_industries) {
 0: return CB_RESULT_LOCATION_DISALLOW;
 1: distcenter_min_distance_distcenter;
}

switch (FEAT_INDUSTRIES, SELF, distcenter_check_location, ((extra_callback_info2 == IND_CREATION_FUND) || (extra_callback_info2 == IND_CREATION_PROSPECT))) {
        1: return CB_RESULT_LOCATION_ALLOW;
        distcenter_count;
}

// Lumber Mill location checks
switch (FEAT_INDUSTRIES, SELF, lumber_mill_no_desert, nearby_tile_terrain_type(0, 0)) {
 TILETYPE_DESERT: return string(STR_ERR_NO_DESERT_ONLY);
 return CB_RESULT_LOCATION_ALLOW;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_dist_center, industry_distance(0x00)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_no_desert;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_hydrocrack, industry_distance(0x03)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_dist_center;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_factory_tropic, industry_distance(INDUSTRYTYPE_TROPICAL_FACTORY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_hydrocrack;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_paper_mill, industry_distance(INDUSTRYTYPE_PAPER_MILL, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_factory_tropic;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_oil_refinery, industry_distance(INDUSTRYTYPE_OIL_REFINERY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_paper_mill;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_sawmill, industry_distance(INDUSTRYTYPE_SAWMILL, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_oil_refinery;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_power_plant, industry_distance(INDUSTRYTYPE_POWER_PLANT, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_sawmill;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_min_distance_lumber_mill, industry_distance(INDUSTRYTYPE_LUMBER_MILL, 0)) {
        0..20: return CB_RESULT_LOCATION_DISALLOW;
        lumber_mill_min_distance_power_plant;
}

switch (FEAT_INDUSTRIES, SELF, lumber_mill_check_location, ((extra_callback_info2 == IND_CREATION_FUND) || (extra_callback_info2 == IND_CREATION_PROSPECT))) {
        1: lumber_mill_no_desert;
        lumber_mill_min_distance_lumber_mill;
}

// Distillery location checks
switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_hotel, industry_distance(0x00, str2number("jdr\02"))) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        town_distance_check_20;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_distcenter, industry_distance(0x00)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_hotel;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_superstore, industry_distance(0x26, str2number("jdr\83"))) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_distcenter;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_shop, industry_distance(0x25, str2number("jdr\83"))) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_superstore;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_farm_fruit, industry_distance(INDUSTRYTYPE_FRUIT_PLANTATION, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_shop;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_farm_tropic, industry_distance(INDUSTRYTYPE_TROPICAL_FARM, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_farm_fruit;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_farm_temp_arctic, industry_distance(INDUSTRYTYPE_TEMPERATE_ARCTIC_FARM, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_farm_tropic;
}

switch (FEAT_INDUSTRIES, SELF, distillery_min_distance_distillery, industry_distance(0x02)) {
        0..49: return CB_RESULT_LOCATION_DISALLOW;
        distillery_min_distance_farm_temp_arctic;
}

switch (FEAT_INDUSTRIES, SELF, distillery_count, industry_count(0x02) < max_industries) {
 0: return CB_RESULT_LOCATION_DISALLOW;
 1: distillery_min_distance_distillery;
}

switch (FEAT_INDUSTRIES, SELF, distillery_check_location, ((extra_callback_info2 == IND_CREATION_FUND) || (extra_callback_info2 == IND_CREATION_PROSPECT))) {
        1: return CB_RESULT_LOCATION_ALLOW;
        distillery_count;
}

// Hydrocracking Plant location checks
// not checking Lumber Mill (either default one or this newgrf one) for Wood: TMWFTLB
switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_foodprocplant, industry_distance(INDUSTRYTYPE_FOOD_PROCESSING_PLANT, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        town_distance_check_20;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_superstore, industry_distance(0x26, str2number("jdr\83"))) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_foodprocplant;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_shop, industry_distance(0x25, str2number("jdr\83"))) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_superstore;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_distcenter, industry_distance(0x00)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_shop;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_paper_mill, industry_distance(INDUSTRYTYPE_PAPER_MILL, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_distcenter;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_factory_tropic, industry_distance(INDUSTRYTYPE_TROPICAL_FACTORY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_paper_mill;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_factory_arctic, industry_distance(INDUSTRYTYPE_PRINTING_WORKS, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_factory_tropic;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_factory_temp, industry_distance(INDUSTRYTYPE_TEMPERATE_FACTORY, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_factory_arctic;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_power_plant, industry_distance(INDUSTRYTYPE_POWER_PLANT, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_factory_temp;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_forest, industry_distance(INDUSTRYTYPE_FOREST, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_power_plant;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_oil_wells, industry_distance(INDUSTRYTYPE_OIL_WELLS, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_forest;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_oil_rig, industry_distance(INDUSTRYTYPE_OIL_RIG, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_oil_wells;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_coal_mine, industry_distance(INDUSTRYTYPE_COAL_MINE, 0)) {
        0..16: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_oil_rig;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_min_distance_petrol_plant, industry_distance(0x03)) {
        0..49: return CB_RESULT_LOCATION_DISALLOW;
        petrol_plant_min_distance_coal_mine;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_count, industry_count(0x03) < max_industries) {
 0: return CB_RESULT_LOCATION_DISALLOW;
 1: petrol_plant_min_distance_petrol_plant;
}

switch (FEAT_INDUSTRIES, SELF, petrol_plant_check_location, ((extra_callback_info2 == IND_CREATION_FUND) || (extra_callback_info2 == IND_CREATION_PROSPECT))) {
        1: return CB_RESULT_LOCATION_ALLOW;
        petrol_plant_count;
}

switch (FEAT_INDUSTRIES, SELF, decide_check_location_switch, LOAD_TEMP(1)) {
 0x03: petrol_plant_check_location;
 0x02: distillery_check_location;
 0x00: distcenter_check_location;
}
# 11 "wannaroo-extra-industries.pnml" 2
# 1 "src/tiles/common_spritelayouts.pnml" 1
/* common_spritelayouts.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

spritelayout jrconcrete_tile_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
}

item (FEAT_INDUSTRYTILES, jrconcrete_tile, 1) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  jrconcrete_tile_spritelayout;
 }
}

spritelayout jrshed_tile_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2061 : construction_state==3 ? 2063 : 2062); }
}

spritelayout jrwarehouse_tile_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2188 : construction_state==3 ? 2190 : 2189); recolour_mode: RECOLOUR_REMAP; palette: PALETTE_USE_DEFAULT; }
}

spritelayout jrredtank_tile_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2194 : construction_state==3 ? 2196 : 2195); recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_RED); }
}
# 12 "wannaroo-extra-industries.pnml" 2
# 1 "src/tile_industry_check.pnml" 1
/* tile_industry_check.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_255, nearby_tile_class(-8, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_flat_check;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_254, nearby_tile_class(-8, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_255;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_253, nearby_tile_class(-8, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_254;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_252, nearby_tile_class(-8, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_253;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_251, nearby_tile_class(-8, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_252;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_250, nearby_tile_class(-8, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_251;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_249, nearby_tile_class(-8, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_250;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_248, nearby_tile_class(-8, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_249;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_247, nearby_tile_class(-8, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_248;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_246, nearby_tile_class(-8, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_247;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_245, nearby_tile_class(-8, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_246;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_244, nearby_tile_class(-8, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_245;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_243, nearby_tile_class(-8, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_244;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_242, nearby_tile_class(-8, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_243;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_241, nearby_tile_class(-8, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_242;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_240, nearby_tile_class(-8, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_241;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_239, nearby_tile_class(-7, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_240;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_238, nearby_tile_class(-7, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_239;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_237, nearby_tile_class(-7, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_238;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_236, nearby_tile_class(-7, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_237;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_235, nearby_tile_class(-7, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_236;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_234, nearby_tile_class(-7, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_235;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_233, nearby_tile_class(-7, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_234;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_232, nearby_tile_class(-7, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_233;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_231, nearby_tile_class(-7, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_232;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_230, nearby_tile_class(-7, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_231;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_229, nearby_tile_class(-7, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_230;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_228, nearby_tile_class(-7, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_229;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_227, nearby_tile_class(-7, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_228;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_226, nearby_tile_class(-7, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_227;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_225, nearby_tile_class(-7, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_226;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_224, nearby_tile_class(-7, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_225;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_223, nearby_tile_class(-6, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_224;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_222, nearby_tile_class(-6, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_223;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_221, nearby_tile_class(-6, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_222;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_220, nearby_tile_class(-6, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_221;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_219, nearby_tile_class(-6, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_220;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_218, nearby_tile_class(-6, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_219;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_217, nearby_tile_class(-6, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_218;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_216, nearby_tile_class(-6, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_217;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_215, nearby_tile_class(-6, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_216;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_214, nearby_tile_class(-6, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_215;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_213, nearby_tile_class(-6, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_214;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_212, nearby_tile_class(-6, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_213;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_211, nearby_tile_class(-6, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_212;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_210, nearby_tile_class(-6, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_211;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_209, nearby_tile_class(-6, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_210;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_208, nearby_tile_class(-6, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_209;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_207, nearby_tile_class(-5, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_208;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_206, nearby_tile_class(-5, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_207;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_205, nearby_tile_class(-5, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_206;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_204, nearby_tile_class(-5, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_205;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_203, nearby_tile_class(-5, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_204;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_202, nearby_tile_class(-5, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_203;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_201, nearby_tile_class(-5, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_202;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_200, nearby_tile_class(-5, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_201;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_199, nearby_tile_class(-5, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_200;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_198, nearby_tile_class(-5, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_199;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_197, nearby_tile_class(-5, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_198;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_196, nearby_tile_class(-5, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_197;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_195, nearby_tile_class(-5, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_196;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_194, nearby_tile_class(-5, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_195;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_193, nearby_tile_class(-5, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_194;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_192, nearby_tile_class(-5, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_193;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_191, nearby_tile_class(-4, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_192;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_190, nearby_tile_class(-4, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_191;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_189, nearby_tile_class(-4, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_190;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_188, nearby_tile_class(-4, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_189;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_187, nearby_tile_class(-4, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_188;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_186, nearby_tile_class(-4, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_187;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_185, nearby_tile_class(-4, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_186;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_184, nearby_tile_class(-4, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_185;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_183, nearby_tile_class(-4, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_184;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_182, nearby_tile_class(-4, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_183;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_181, nearby_tile_class(-4, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_182;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_180, nearby_tile_class(-4, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_181;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_179, nearby_tile_class(-4, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_180;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_178, nearby_tile_class(-4, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_179;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_177, nearby_tile_class(-4, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_178;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_176, nearby_tile_class(-4, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_177;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_175, nearby_tile_class(-3, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_176;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_174, nearby_tile_class(-3, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_175;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_173, nearby_tile_class(-3, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_174;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_172, nearby_tile_class(-3, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_173;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_171, nearby_tile_class(-3, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_172;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_170, nearby_tile_class(-3, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_171;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_169, nearby_tile_class(-3, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_170;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_168, nearby_tile_class(-3, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_169;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_167, nearby_tile_class(-3, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_168;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_166, nearby_tile_class(-3, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_167;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_165, nearby_tile_class(-3, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_166;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_164, nearby_tile_class(-3, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_165;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_163, nearby_tile_class(-3, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_164;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_162, nearby_tile_class(-3, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_163;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_161, nearby_tile_class(-3, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_162;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_160, nearby_tile_class(-3, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_161;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_159, nearby_tile_class(-2, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_160;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_158, nearby_tile_class(-2, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_159;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_157, nearby_tile_class(-2, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_158;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_156, nearby_tile_class(-2, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_157;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_155, nearby_tile_class(-2, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_156;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_154, nearby_tile_class(-2, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_155;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_153, nearby_tile_class(-2, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_154;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_152, nearby_tile_class(-2, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_153;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_151, nearby_tile_class(-2, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_152;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_150, nearby_tile_class(-2, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_151;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_149, nearby_tile_class(-2, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_150;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_148, nearby_tile_class(-2, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_149;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_147, nearby_tile_class(-2, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_148;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_146, nearby_tile_class(-2, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_147;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_145, nearby_tile_class(-2, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_146;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_144, nearby_tile_class(-2, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_145;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_143, nearby_tile_class(-1, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_144;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_142, nearby_tile_class(-1, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_143;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_141, nearby_tile_class(-1, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_142;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_140, nearby_tile_class(-1, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_141;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_139, nearby_tile_class(-1, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_140;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_138, nearby_tile_class(-1, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_139;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_137, nearby_tile_class(-1, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_138;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_136, nearby_tile_class(-1, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_137;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_135, nearby_tile_class(-1, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_136;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_134, nearby_tile_class(-1, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_135;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_133, nearby_tile_class(-1, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_134;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_132, nearby_tile_class(-1, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_133;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_131, nearby_tile_class(-1, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_132;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_130, nearby_tile_class(-1, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_131;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_129, nearby_tile_class(-1, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_130;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_128, nearby_tile_class(-1, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_129;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_127, nearby_tile_class(0, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_128;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_126, nearby_tile_class(0, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_127;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_125, nearby_tile_class(0, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_126;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_124, nearby_tile_class(0, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_125;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_123, nearby_tile_class(0, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_124;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_122, nearby_tile_class(0, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_123;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_121, nearby_tile_class(0, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_122;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_120, nearby_tile_class(0, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_121;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_119, nearby_tile_class(0, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_120;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_118, nearby_tile_class(0, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_119;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_117, nearby_tile_class(0, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_118;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_116, nearby_tile_class(0, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_117;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_115, nearby_tile_class(0, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_116;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_114, nearby_tile_class(0, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_115;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_113, nearby_tile_class(0, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_114;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_112, nearby_tile_class(1, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_113;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_111, nearby_tile_class(1, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_112;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_110, nearby_tile_class(1, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_111;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_109, nearby_tile_class(1, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_110;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_108, nearby_tile_class(1, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_109;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_107, nearby_tile_class(1, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_108;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_106, nearby_tile_class(1, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_107;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_105, nearby_tile_class(1, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_106;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_104, nearby_tile_class(1, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_105;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_103, nearby_tile_class(1, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_104;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_102, nearby_tile_class(1, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_103;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_101, nearby_tile_class(1, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_102;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_100, nearby_tile_class(1, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_101;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_99, nearby_tile_class(1, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_100;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_98, nearby_tile_class(1, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_99;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_97, nearby_tile_class(1, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_98;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_96, nearby_tile_class(2, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_97;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_95, nearby_tile_class(2, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_96;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_94, nearby_tile_class(2, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_95;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_93, nearby_tile_class(2, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_94;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_92, nearby_tile_class(2, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_93;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_91, nearby_tile_class(2, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_92;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_90, nearby_tile_class(2, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_91;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_89, nearby_tile_class(2, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_90;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_88, nearby_tile_class(2, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_89;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_87, nearby_tile_class(2, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_88;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_86, nearby_tile_class(2, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_87;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_85, nearby_tile_class(2, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_86;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_84, nearby_tile_class(2, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_85;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_83, nearby_tile_class(2, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_84;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_82, nearby_tile_class(2, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_83;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_81, nearby_tile_class(2, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_82;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_80, nearby_tile_class(3, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_81;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_79, nearby_tile_class(3, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_80;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_78, nearby_tile_class(3, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_79;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_77, nearby_tile_class(3, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_78;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_76, nearby_tile_class(3, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_77;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_75, nearby_tile_class(3, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_76;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_74, nearby_tile_class(3, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_75;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_73, nearby_tile_class(3, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_74;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_72, nearby_tile_class(3, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_73;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_71, nearby_tile_class(3, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_72;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_70, nearby_tile_class(3, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_71;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_69, nearby_tile_class(3, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_70;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_68, nearby_tile_class(3, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_69;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_67, nearby_tile_class(3, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_68;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_66, nearby_tile_class(3, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_67;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_65, nearby_tile_class(3, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_66;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_64, nearby_tile_class(4, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_65;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_63, nearby_tile_class(4, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_64;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_62, nearby_tile_class(4, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_63;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_61, nearby_tile_class(4, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_62;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_60, nearby_tile_class(4, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_61;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_59, nearby_tile_class(4, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_60;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_58, nearby_tile_class(4, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_59;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_57, nearby_tile_class(4, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_58;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_56, nearby_tile_class(4, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_57;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_55, nearby_tile_class(4, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_56;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_54, nearby_tile_class(4, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_55;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_53, nearby_tile_class(4, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_54;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_52, nearby_tile_class(4, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_53;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_51, nearby_tile_class(4, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_52;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_50, nearby_tile_class(4, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_51;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_49, nearby_tile_class(4, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_50;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_48, nearby_tile_class(5, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_49;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_47, nearby_tile_class(5, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_48;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_46, nearby_tile_class(5, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_47;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_45, nearby_tile_class(5, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_46;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_44, nearby_tile_class(5, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_45;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_43, nearby_tile_class(5, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_44;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_42, nearby_tile_class(5, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_43;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_41, nearby_tile_class(5, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_42;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_40, nearby_tile_class(5, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_41;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_39, nearby_tile_class(5, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_40;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_38, nearby_tile_class(5, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_39;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_37, nearby_tile_class(5, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_38;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_36, nearby_tile_class(5, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_37;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_35, nearby_tile_class(5, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_36;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_34, nearby_tile_class(5, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_35;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_33, nearby_tile_class(5, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_34;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_32, nearby_tile_class(6, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_33;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_31, nearby_tile_class(6, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_32;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_30, nearby_tile_class(6, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_31;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_29, nearby_tile_class(6, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_30;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_28, nearby_tile_class(6, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_29;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_27, nearby_tile_class(6, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_28;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_26, nearby_tile_class(6, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_27;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_25, nearby_tile_class(6, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_26;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_24, nearby_tile_class(6, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_25;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_23, nearby_tile_class(6, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_24;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_22, nearby_tile_class(6, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_23;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_21, nearby_tile_class(6, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_22;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_20, nearby_tile_class(6, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_21;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_19, nearby_tile_class(6, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_20;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_18, nearby_tile_class(6, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_19;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_17, nearby_tile_class(6, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_18;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_16, nearby_tile_class(7, -8)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_17;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_15, nearby_tile_class(7, -7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_16;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_14, nearby_tile_class(7, -6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_15;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_13, nearby_tile_class(7, -5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_14;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_12, nearby_tile_class(7, -4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_13;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_11, nearby_tile_class(7, -3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_12;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_10, nearby_tile_class(7, -2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_11;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_9, nearby_tile_class(7, -1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_10;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_8, nearby_tile_class(7, 0)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_9;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_7, nearby_tile_class(7, 1)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_8;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_6, nearby_tile_class(7, 2)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_7;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_5, nearby_tile_class(7, 3)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_6;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_4, nearby_tile_class(7, 4)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_5;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_3, nearby_tile_class(7, 5)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_4;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_2, nearby_tile_class(7, 6)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_3;
}

switch (FEAT_INDUSTRYTILES, SELF, tile_industry_check_1, nearby_tile_class(7, 7)) {
 TILE_CLASS_INDUSTRY: return string(STR_TILE_IND_CHECK_FAILED);
 tile_industry_check_2;
}
# 13 "wannaroo-extra-industries.pnml" 2
# 1 "src/tiles/distribution_center_tiles.pnml" 1
/* distribution_center_tiles.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

spritelayout jrdistcenter_tile_goods_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }

 // goods cargo icons
 /*
	building { sprite: 4302; xoffset: 1; yoffset: 2; }
	building { sprite: 4302; xoffset: 5; yoffset: 2; }
	building { sprite: 4302; xoffset: 9; yoffset: 2; }
	building { sprite: 4302; xoffset: 1; yoffset: 2; zoffset: 4; }
	building { sprite: 4302; xoffset: 5; yoffset: 2; zoffset: 4; }
	building { sprite: 4302; xoffset: 9 ; yoffset: 2; zoffset: 4; }

	building { sprite: 4302; xoffset: 1; yoffset: 6; }
	building { sprite: 4302; xoffset: 5; yoffset: 6; }
	building { sprite: 4302; xoffset: 9; yoffset: 6; }
	building { sprite: 4302; xoffset: 1; yoffset: 6; zoffset: 4; }
	building { sprite: 4302; xoffset: 5; yoffset: 6; zoffset: 4; }
	building { sprite: 4302; xoffset: 9; yoffset: 6; zoffset: 4; }
	*/
}

item (FEAT_INDUSTRYTILES, jrdistcenter_tile_warehouse, 2) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrwarehouse_tile_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistcenter_tile_goods, 3) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrdistcenter_tile_goods_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistcenter_tile_shed, 4) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrshed_tile_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistcenter_tile_tank, 5) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrredtank_tile_spritelayout;
 }
}
# 14 "wannaroo-extra-industries.pnml" 2
# 1 "src/distribution_center.pnml" 1
/* distribution_center.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

tilelayout jrdistcenter_tilelayout1 {
 //0, 0: jrconcrete_tile;
 0, 0: jrdistcenter_tile_warehouse;
 0, 1: jrdistcenter_tile_shed;
 //0, 1: jrdistcenter_tile_warehouse;
 1, 0: jrdistcenter_tile_warehouse;
 1, 1: jrconcrete_tile;
 1, 2: jrdistcenter_tile_shed;
 2, 0: jrdistcenter_tile_warehouse;
 2, 1: jrdistcenter_tile_goods;
 //2, 2: jrconcrete_tile;
 2, 2: jrdistcenter_tile_shed;
}

tilelayout jrdistcenter_tilelayout2 {
 //0, 0: jrconcrete_tile;
 0, 0: jrdistcenter_tile_warehouse;
 0, 1: jrdistcenter_tile_warehouse;
 0, 2: jrdistcenter_tile_warehouse;
 1, 0: jrconcrete_tile;
 1, 1: jrconcrete_tile;
 1, 2: jrdistcenter_tile_goods;
 2, 1: jrdistcenter_tile_shed;
 2, 2: jrdistcenter_tile_shed;
}

tilelayout jrdistcenter_petr_tilelayout1 {
 0, 0: jrdistcenter_tile_tank;
 0, 1: jrdistcenter_tile_shed;
 1, 0: jrdistcenter_tile_warehouse;
 1, 1: jrconcrete_tile;
 1, 2: jrdistcenter_tile_shed;
 2, 0: jrdistcenter_tile_warehouse;
 2, 1: jrdistcenter_tile_goods;
 2, 2: jrdistcenter_tile_tank;
}

tilelayout jrdistcenter_petr_tilelayout2 {
 0, 0: jrdistcenter_tile_tank;
 0, 1: jrdistcenter_tile_warehouse;
 0, 2: jrdistcenter_tile_warehouse;
 1, 0: jrdistcenter_tile_tank;
 1, 1: jrconcrete_tile;
 1, 2: jrdistcenter_tile_goods;
 2, 1: jrdistcenter_tile_shed;
 2, 2: jrdistcenter_tile_shed;
}

/* When we receive cargo, the counter (0x00) is reset, industry is initialised (0x0F). */
produce(industry_distcenter_cargo_arrive_produce, [], [], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), 0])

switch (FEAT_INDUSTRIES, SELF, industry_IND_DIST_CENTER_monopoly_check, [STORE_TEMP(0x00, 1), industry_town_count(0x00)]) { 0: decide_check_location_switch; return string(STR_ONE_INDUSTRY_PER_TOWN); } switch (FEAT_INDUSTRIES, SELF, check_nearby_IND_DIST_CENTER_industry, industry_distance(0x00)) { 0..49: return string(STR_INDUSTRY_TOO_CLOSE); industry_IND_DIST_CENTER_monopoly_check; }

switch (FEAT_INDUSTRIES, SELF, dist_center_water_check, water_distance) {
 0..16: return string(STR_WATER_CHECK_FAILED);
 check_nearby_IND_DIST_CENTER_industry;
}

if (param_enable_distcenter) {

 item (FEAT_INDUSTRIES, industry_distcenter, 0x00) {
  property {
   substitute: INDUSTRYTYPE_POWER_PLANT;
   conflicting_ind_types: [];
   layouts: [jrdistcenter_tilelayout1, jrdistcenter_tilelayout2];
   life_type: IND_LIFE_TYPE_BLACK_HOLE;
   // costs from FIRS 3 bulk terminal
   fund_cost_multiplier: 152;
   remove_cost_multiplier: 0;
   cargo_types: [accept_cargo("FOOD"), accept_cargo("GOOD"), accept_cargo("PETR"), accept_cargo("BEER"), accept_cargo("RFPR"), accept_cargo("WOOD"), accept_cargo("BDMT"), accept_cargo("ENSP"), accept_cargo("FMSP"), accept_cargo("MNSP")];
   min_cargo_distr: 5;
   prob_map_gen: param_manual_placement ? 0 : 2;
   prob_in_game: param_manual_placement ? 0 : 2;
   prospect_chance: 1.0;
   map_colour: 189; //168;
   name: string(STR_DISTCENTER_NAME);
   nearby_station_name: string(STR_DISTCENTER_STATION_NAME);
  }
  graphics {
   monthly_prod_change: industry_monthly_prod_change_switch;
            random_prod_change: industry_random_prod_change_switch;
   produce_cargo_arrival: industry_distcenter_cargo_arrive_produce;
   location_check: dist_center_water_check;
   colour: (founder == 16) ? COLOUR_BROWN : founder_colour1;
   cargo_subtype_display: industry_remove_cargo_text;
  }
 }

}

if (cargotype_available("PETR")) {
 item (FEAT_INDUSTRIES, industry_distcenter) {
  property {
   layouts: [jrdistcenter_petr_tilelayout1, jrdistcenter_petr_tilelayout2];
  }
 }
}
# 15 "wannaroo-extra-industries.pnml" 2
# 1 "src/tiles/distillery_tiles.pnml" 1
/* distillery_tiles.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

spritelayout jrdistillery_tile_boiler_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2191 : construction_state==3 ? 2193 : 2192); recolour_mode: RECOLOUR_REMAP; palette: PALETTE_USE_DEFAULT; }
}

spritelayout jrdistillery_tile_yard_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: 2199; }
}

item (FEAT_INDUSTRYTILES, jrdistillery_tile_warehouse, 6) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrwarehouse_tile_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistillery_tile_yard, 7) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrdistillery_tile_yard_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistillery_tile_boiler, 8) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrdistillery_tile_boiler_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrdistillery_tile_tank, 9) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrredtank_tile_spritelayout;
 }
}
# 16 "wannaroo-extra-industries.pnml" 2
# 1 "src/distillery.pnml" 1
/* distillery.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

tilelayout jrdistillery_tilelayout1 {
 0, 0: jrdistillery_tile_warehouse;
 0, 1: jrdistillery_tile_tank;
 1, 0: jrdistillery_tile_boiler;
 1, 1: jrdistillery_tile_yard;
 2, 0: jrdistillery_tile_boiler;
 2, 1: jrdistillery_tile_yard;
}

tilelayout jrdistillery_tilelayout2 {
 0, 0: jrdistillery_tile_warehouse;
 0, 1: jrdistillery_tile_yard;
 0, 2: jrdistillery_tile_yard;
 1, 0: jrconcrete_tile;
 1, 1: jrdistillery_tile_boiler;
 1, 2: jrdistillery_tile_boiler;
 2, 0: jrdistillery_tile_warehouse;
 2, 1: jrconcrete_tile;
 2, 2: jrdistillery_tile_tank;
}

switch (FEAT_INDUSTRIES, SELF, industry_IND_DISTILLERY_monopoly_check, [STORE_TEMP(0x02, 1), industry_town_count(0x02)]) { 0: decide_check_location_switch; return string(STR_ONE_INDUSTRY_PER_TOWN); } switch (FEAT_INDUSTRIES, SELF, check_nearby_IND_DISTILLERY_industry, industry_distance(0x02)) { 0..49: return string(STR_INDUSTRY_TOO_CLOSE); industry_IND_DISTILLERY_monopoly_check; }

//produce(industry_distillery_cargo_produce, waiting_cargo_1, waiting_cargo_2, waiting_cargo_3, waiting_cargo_1+waiting_cargo_2, 0, [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00)]);
produce(industry_distillery_cargo_produce, [GRAI: incoming_cargo_waiting("GRAI"); WHEA: incoming_cargo_waiting("WHEA"); MAIZ: incoming_cargo_waiting("MAIZ"); FRUT: incoming_cargo_waiting("FRUT");], [BEER: (incoming_cargo_waiting("GRAI") + incoming_cargo_waiting("WHEA") + incoming_cargo_waiting("MAIZ") + incoming_cargo_waiting("FRUT"));], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), 0])

if (param_enable_distillery) {

 item (FEAT_INDUSTRIES, industry_distillery, 0x02) {
  property {
   substitute: INDUSTRYTYPE_POWER_PLANT;
   conflicting_ind_types: [];
   layouts: [jrdistillery_tilelayout1, jrdistillery_tilelayout2];
   life_type: IND_LIFE_TYPE_PROCESSING;
   // costs from FIRS 3 brewery
   fund_cost_multiplier: 50;
   remove_cost_multiplier: 0;
   cargo_types: [accept_cargo("GRAI"), accept_cargo("WHEA"), accept_cargo("MAIZ"), accept_cargo("FRUT"), produce_cargo("BEER", 0)];
   min_cargo_distr: 5;
   prob_map_gen: param_manual_placement ? 0 : 2;
   prob_in_game: param_manual_placement ? 0 : 2;
  prospect_chance: 1.0;
   map_colour: 192;
   name: string(STR_DISTILLERY_NAME);
   nearby_station_name: string(STR_DISTILLERY_STATION_NAME);
  }
  graphics {
   monthly_prod_change: industry_monthly_prod_change_switch;
            random_prod_change: industry_random_prod_change_switch;
   produce_cargo_arrival: industry_distillery_cargo_produce;
   location_check: check_nearby_IND_DISTILLERY_industry;
   colour: (founder == 16) ? COLOUR_CREAM : founder_colour1;
   cargo_subtype_display: industry_remove_cargo_text;
  }
 }
}
# 17 "wannaroo-extra-industries.pnml" 2
# 1 "src/tiles/petrol_plant_tiles.pnml" 1
/* petrol_plant_tiles.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

spritelayout jrpetrolplant_tile_distiller_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2084 : construction_state==3 ? 2086 : 2085); }
 building { sprite: (construction_state==0 ? 2084 : construction_state==3 ? 2086 : 2085); xoffset: 6; }
}

spritelayout jrpetrolplant_tile_cracker_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2090 : construction_state==3 ? 2092 : 2091); recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_GREY); }
}

spritelayout jrpetrolplant_tile_tallredtanks_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2081 : construction_state==3 ? 2083 : 2082); recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_ORANGE); }
 building { sprite: (construction_state==0 ? 2081 : construction_state==3 ? 2083 : 2082); yoffset: 8; recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_RED); }
 building { sprite: (construction_state==0 ? 2081 : construction_state==3 ? 2083 : 2082); xoffset: 8; recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_ORANGE); }
 building { sprite: (construction_state==0 ? 2081 : construction_state==3 ? 2083 : 2082); xoffset: 8; yoffset: 8; recolour_mode: RECOLOUR_REMAP; palette: palette_1cc(COLOUR_RED); }
}

spritelayout jrpetrolplant_tile_widetank_spritelayout {
 ground { sprite: GROUNDSPRITE_CONCRETE; }
 building { sprite: (construction_state==0 ? 2078 : construction_state==3 ? 2080 : 2079); xoffset: 2; yoffset: 2; recolour_mode: RECOLOUR_REMAP; palette: PALETTE_USE_DEFAULT; }
}

item (FEAT_INDUSTRYTILES, jrpetrolplant_tile_distiller, 10) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrpetrolplant_tile_distiller_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrpetrolplant_tile_tallredtanks, 11) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrpetrolplant_tile_tallredtanks_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrpetrolplant_tile_widetank, 12) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrpetrolplant_tile_widetank_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrpetrolplant_tile_shed, 13) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrshed_tile_spritelayout;
 }
}

item (FEAT_INDUSTRYTILES, jrpetrolplant_tile_cracker, 14) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  tile_check: tile_industry_check_1;
  jrpetrolplant_tile_cracker_spritelayout;
 }
}
# 18 "wannaroo-extra-industries.pnml" 2
# 1 "src/petrol_plant.pnml" 1
/* petrol_plant.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

tilelayout jrpetrolplant_tilelayout1 {
 0, 0: jrpetrolplant_tile_distiller;
 0, 1: jrpetrolplant_tile_tallredtanks;
//	0, 2
 1, 0: jrpetrolplant_tile_cracker;
 1, 1: jrpetrolplant_tile_cracker;
 1, 2: jrpetrolplant_tile_shed;
 2, 0: jrpetrolplant_tile_widetank;
 2, 1: jrpetrolplant_tile_widetank;
 2, 2: jrconcrete_tile;
}

tilelayout jrpetrolplant_tilelayout2 {
 0, 0: jrpetrolplant_tile_distiller;
 0, 1: jrpetrolplant_tile_tallredtanks;
//	0, 2
 1, 0: jrconcrete_tile;
 1, 1: jrpetrolplant_tile_cracker;
 1, 2: jrpetrolplant_tile_cracker;
 2, 0: jrpetrolplant_tile_shed;
 2, 1: jrpetrolplant_tile_widetank;
 2, 2: jrpetrolplant_tile_widetank;
}

switch (FEAT_INDUSTRIES, SELF, industry_IND_PETROL_PLANT_monopoly_check, [STORE_TEMP(0x03, 1), industry_town_count(0x03)]) { 0: decide_check_location_switch; return string(STR_ONE_INDUSTRY_PER_TOWN); } switch (FEAT_INDUSTRIES, SELF, check_nearby_IND_PETROL_PLANT_industry, industry_distance(0x03)) { 0..49: return string(STR_INDUSTRY_TOO_CLOSE); industry_IND_PETROL_PLANT_monopoly_check; }

switch (FEAT_INDUSTRIES, SELF, petrol_plant_water_check, water_distance) {
 0..16: return string(STR_WATER_CHECK_FAILED);
 check_nearby_IND_PETROL_PLANT_industry;
}

// we are repeating the produce block to ensure the perm 8, 9, 10 counts are updated correctly (for debugging)
//produce(industry_petrolplant_cargo_produce, [STORE_PERM(LOAD_PERM(8)+waiting_cargo_1, 8), STORE_PERM(LOAD_PERM(9)+waiting_cargo_2, 9), STORE_PERM(LOAD_PERM(10)+waiting_cargo_3, 10), waiting_cargo_1], waiting_cargo_2, waiting_cargo_3, ((waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)*LOAD_PERM(0x04)+50)/100, ((waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)*LOAD_PERM(0x05)+50)/100, [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), (waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)>0]);
produce(industry_petrolplant_cargo_produce, [COAL: incoming_cargo_waiting("COAL"); OIL_: incoming_cargo_waiting("OIL_"); WOOD: incoming_cargo_waiting("WOOD");], [RFPR: (LOAD_TEMP(2)*LOAD_PERM(0x04)+50)/100; PETR: (LOAD_TEMP(2)*LOAD_PERM(0x05)+50)/100;], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), LOAD_TEMP(2)>0])

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_cargo_arrival, [STORE_TEMP(incoming_cargo_waiting("COAL")+incoming_cargo_waiting("OIL_")+incoming_cargo_waiting("WOOD"), 2), STORE_PERM(LOAD_PERM(8)+incoming_cargo_waiting("COAL"), 8), STORE_PERM(LOAD_PERM(9)+incoming_cargo_waiting("OIL_"), 9), STORE_PERM(LOAD_PERM(10)+incoming_cargo_waiting("WOOD"), 10), 1]) {
    industry_petrolplant_cargo_produce;
}

// need to compensate for the fact that transported_last_month_pcts are really not very responsive/indicative
// previous complicated calcs worked but were not responsive enough
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_update, [STORE_PERM(LOAD_PERM(8)+LOAD_PERM(9)+LOAD_PERM(10), 12), STORE_PERM(0, 8), STORE_PERM(0, 9), STORE_PERM(0, 10), 1]) {
 industry_monthly_prod_change_switch;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_50, [STORE_PERM(50 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(50 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
 industry_petrolplant_calc_output_ratios_update;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_75, [STORE_PERM(75 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(25 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
 industry_petrolplant_calc_output_ratios_update;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_90, [STORE_PERM(90 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(10 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
 industry_petrolplant_calc_output_ratios_update;
}

//switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_2, abs(transported_last_month_pct_1 - transported_last_month_pct_2)) {
// jrook 20200502
// transported % seems to be in range 0-255 in nml 0.5.0 (fixed in 0.5.1)
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_2, abs(transported_last_month_pct("RFPR") - transported_last_month_pct("PETR"))) {
 0..10: industry_petrolplant_calc_output_ratios_50; // 0-10
 11..25: industry_petrolplant_calc_output_ratios_75; // 11-25
 26..100: industry_petrolplant_calc_output_ratios_90; // 26-100
 return CB_FAILED;
}

//switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios, STORE_TEMP(transported_last_month_pct_1 >= transported_last_month_pct_2 ? 0 : -1, 1)) {
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios, STORE_TEMP(transported_last_month_pct("RFPR") >= transported_last_month_pct("PETR") ? 0 : -1, 1)) {
 industry_petrolplant_calc_output_ratios_2;
}

if (param_enable_petrol_plant) {

 item (FEAT_INDUSTRIES, industry_petrolplant, 0x03) {
  property {
   substitute: INDUSTRYTYPE_POWER_PLANT;
   conflicting_ind_types: [];
   layouts: [jrpetrolplant_tilelayout1, jrpetrolplant_tilelayout2];
   life_type: IND_LIFE_TYPE_PROCESSING;
   // costs from FIRS 3 oil refinery
   fund_cost_multiplier: 200;
   remove_cost_multiplier: 0;
   cargo_types: [accept_cargo("COAL"), accept_cargo("OIL_"), accept_cargo("WOOD"), produce_cargo("RFPR", 0), produce_cargo("PETR", 0)];
   min_cargo_distr: 5;
   prob_map_gen: param_manual_placement ? 0 : 2;
   prob_in_game: param_manual_placement ? 0 : 2;
   prospect_chance: 1.0;
   map_colour: 165;
   name: string(STR_PETROL_PLANT_NAME);
   nearby_station_name: string(STR_PETROL_PLANT_STATION_NAME);
  }
  graphics {
   monthly_prod_change: industry_petrolplant_calc_output_ratios;
            random_prod_change: industry_random_prod_change_switch;
            produce_cargo_arrival: industry_petrolplant_cargo_arrival;
   location_check: petrol_plant_water_check;
   colour: (founder == 16) ? (grf_future_status("\4A\44\FA\B1") ? COLOUR_MAUVE : COLOUR_BROWN) : founder_colour1;
   cargo_subtype_display: industry_remove_cargo_text;
  }
 }

}
# 19 "wannaroo-extra-industries.pnml" 2
# 1 "src/lumber_mill.pnml" 1
/* lumber_mill.pnml */

/*

    License: GPL v2

    https://github.com/jrook1445/wannaroo-extra-industries

*/
# 8 "src/lumber_mill.pnml"
if (param_enable_lumber_mill) {

    if (!cargotype_available("WOOD")) {

     item(FEAT_CARGOS, cargo_wood, 63) {
      property {
       type_name: TTD_STR_CARGO_PLURAL_WOOD;
       unit_name: TTD_STR_CARGO_SINGULAR_WOOD;
       type_abbreviation: TTD_STR_ABBREV_WOOD;
       sprite: 4304;
       weight: 1.0;
       station_list_colour: 55;
       cargo_payment_list_colour: 55;
       is_freight: 1;
       cargo_classes: bitmask(CC_PIECE_GOODS);
       town_growth_effect: TOWNGROWTH_NONE;
       town_growth_multiplier: 1.0;
       units_of_cargo: TTD_STR_TONS;
       items_of_cargo: TTD_STR_QUANTITY_WOOD;
       penalty_lowerbound: 24;
       single_penalty_length: 255;
       price_factor: 97;
       capacity_multiplier: 1;
       cargo_label: "WOOD";
       number: 63;
      }
      if (climate == CLIMATE_TROPIC) {
       property {
        price_factor: 154;
       }
      }
     }
    }

 item (FEAT_INDUSTRIES, industry_lumbermill, 0x01) {
  property {
   substitute: INDUSTRYTYPE_LUMBER_MILL;
   override: INDUSTRYTYPE_LUMBER_MILL;
   conflicting_ind_types: [];
   cargo_types: [produce_cargo("WOOD", 0)];
   map_colour: 86;
   prob_map_gen: 0;
   prob_in_game: 0;
  }
  graphics {
      location_check: lumber_mill_check_location;
  }
 }
}
# 20 "wannaroo-extra-industries.pnml" 2
# 1 "src/city_hall.pnml" 1
/* city_hall.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

//@TODO:
// RFE: building gfx depend on town type/population

spritelayout cityhall_tile_1_layout {
 ground { sprite: (climate == CLIMATE_TEMPERATE) ? 2184 : 2182; }
 building { sprite: (climate == CLIMATE_TEMPERATE) ? 2186 : 2180; }
}

spritelayout cityhall_tile_2_layout {
 ground { sprite: (climate == CLIMATE_TEMPERATE) ? 2185 : 2183; }
 building { sprite: (climate == CLIMATE_TEMPERATE) ? 2187 : 2181; }
}

item(FEAT_INDUSTRYTILES, cityhall_tile_1, 15) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  cityhall_tile_1_layout;
 }
}

item(FEAT_INDUSTRYTILES, cityhall_tile_2, 16) {
 property {
  substitute: 0;
  special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
 }
 graphics {
  cityhall_tile_2_layout;
 }
}

tilelayout cityhall_layout_1 {
 0, 0: cityhall_tile_1;
 1, 0: cityhall_tile_2;
}

produce(industry_city_hall_produce_256_pass, [], [PASS: LOAD_PERM(0x02)+extra_callback_info1%4;], 0)
produce(industry_city_hall_produce_256_tour, [], [TOUR: LOAD_PERM(0x02)+extra_callback_info1%4;], 0)

produce(industry_city_hall_produce_cargo_arrival_pass, [PASS: incoming_cargo_waiting("PASS");], [PASS: incoming_cargo_waiting("PASS")/4;], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), 0])
produce(industry_city_hall_produce_cargo_arrival_tour, [TOUR: incoming_cargo_waiting("TOUR");], [TOUR: incoming_cargo_waiting("TOUR")/4;], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), 0])

//produce(industry_city_hall_produce_cargo_arrival, waiting_cargo_1, waiting_cargo_2, waiting_cargo_3, (waiting_cargo_1/2 + waiting_cargo_2/4 + waiting_cargo_3/4)*param_enable_tour_prod, 0, 0);

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_produce_256, cargotype_available("TOUR")) {
    1: industry_city_hall_produce_256_tour;
    industry_city_hall_produce_256_pass;
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_produce_cargo_arrival, cargotype_available("TOUR")) {
    1: industry_city_hall_produce_cargo_arrival_tour;
    industry_city_hall_produce_cargo_arrival_pass;
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_info_not_a_city, [LOAD_PERM(0x05), STORE_TEMP(LOAD_PERM(0x06), 256), STORE_TEMP(LOAD_PERM(0x04), 257), STORE_TEMP(LOAD_PERM(0x05), 258)]) {
 0..2: return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_IND_TOWN);
 3: return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_PLANNED_TOWN);
 return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_VILLAGE);
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_info_city, [LOAD_PERM(0x05), STORE_TEMP(LOAD_PERM(0x06), 256), STORE_TEMP(LOAD_PERM(0x04), 257), STORE_TEMP(LOAD_PERM(0x05), 258)]) {
 0: return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_METRO);
 1: return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_IND_CITY);
 return string(STR_INDUSTRY_CITY_HALL_INFO_TEXT_SMALL_CITY);
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_info_text_2, LOAD_PERM(0x04)) {
 1: industry_city_hall_info_city;
 industry_city_hall_info_not_a_city;
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_info_text, ( grf_future_status("\44\44\24\11") || grf_future_status("\6A\64\72\52")) ) {
 1: industry_city_hall_info_text_2;
 return CB_RESULT_NO_TEXT;
}

switch (FEAT_INDUSTRIES, SELF, get_town_info_2, [STORE_PERM(LOAD_TEMP(0), 0x04), STORE_PERM( (LOAD_PERM(0x04)==1 ? getbits(LOAD_TEMP(1),0,2) : getbits(LOAD_TEMP(1),0,3)), 0x05), STORE_PERM(LOAD_TEMP(2), 0x06)]) {
 industry_monthly_prod_change_switch; //return CB_RESULT_IND_PROD_NO_CHANGE;
}

switch (FEAT_INDUSTRIES, PARENT, get_town_info, [STORE_TEMP(var[0x40], 0), STORE_TEMP(var[0x41], 1), STORE_TEMP(population, 2)]) {
 get_town_info_2;
}

switch (FEAT_INDUSTRIES, SELF, town_square_distance_check, industry_distance(0x02, str2number("jdr\02"))) {
 0..11: return string(STR_TOUR_INDUSTRY_TOO_CLOSE);
 return CB_RESULT_LOCATION_ALLOW;
}

switch (FEAT_INDUSTRIES, SELF, tower_distance_check, industry_distance(0x01, str2number("jdr\02"))) {
 0..11: return string(STR_TOUR_INDUSTRY_TOO_CLOSE);
 town_square_distance_check;
}

switch (FEAT_INDUSTRIES, SELF, hotel_distance_check, industry_distance(0x00, str2number("jdr\02"))) {
 0..11: return string(STR_TOUR_INDUSTRY_TOO_CLOSE);
 tower_distance_check;
}

switch (FEAT_INDUSTRIES, SELF, industry_city_hall_monopoly_check, industry_town_count(industry_city_hall, -1)) {
 0: hotel_distance_check;
 return string(STR_ONE_INDUSTRY_PER_TOWN);
}

if (param_enable_city_hall) {

item(FEAT_INDUSTRIES, industry_city_hall, 0x04) {
 property {
  substitute: INDUSTRYTYPE_POWER_PLANT;
  layouts: [cityhall_layout_1];
  life_type: IND_LIFE_TYPE_BLACK_HOLE;
  fund_cost_multiplier: 101;
  remove_cost_multiplier: 0;
  cargo_types: [accept_cargo("PASS"), produce_cargo("PASS", 0)];
  min_cargo_distr: 5;
  conflicting_ind_types: [];
  spec_flags: bitmask(IND_FLAG_ONLY_IN_TOWNS, IND_FLAG_RANDOM_BITS_IN_PRODUCTION_CALLBACK);
  prob_map_gen: 0;
  prob_in_game: 0;
  prospect_chance: 1.0;
  map_colour: 103;
  name: string(STR_CITY_HALL_NAME);
  nearby_station_name: string(STR_CITY_HALL_STATION_NAME);
 }

 if (cargotype_available("TOUR")) {
     property {
         cargo_types: [accept_cargo("TOUR"), produce_cargo("TOUR", 0)];
        }
    }

 graphics {
  location_check: industry_city_hall_monopoly_check;
  produce_256_ticks: industry_city_hall_produce_256;
  produce_cargo_arrival: industry_city_hall_produce_cargo_arrival;
  build_prod_change: [STORE_PERM(9 + extra_callback_info2%4, 0x02), 16];
  monthly_prod_change: get_town_info; //return CB_RESULT_IND_PROD_NO_CHANGE;
  random_prod_change: industry_random_prod_change_switch; //return CB_RESULT_IND_PROD_NO_CHANGE;
  cargo_subtype_display: industry_remove_cargo_text;
  extra_text_industry: industry_city_hall_info_text;
 }
}

}
# 21 "wannaroo-extra-industries.pnml" 2
