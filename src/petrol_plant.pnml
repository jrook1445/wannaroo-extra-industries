/* petrol_plant.pnml */

/*
    License: GPL v2
    https://github.com/jrook1445/wannaroo-extra-industries
*/

tilelayout jrpetrolplant_tilelayout1 {
	0, 0: jrpetrolplant_tile_distiller;
	0, 1: jrpetrolplant_tile_tallredtanks;
//	0, 2
	1, 0: jrpetrolplant_tile_cracker;
	1, 1: jrpetrolplant_tile_cracker;
	1, 2: jrpetrolplant_tile_shed;
	2, 0: jrpetrolplant_tile_widetank;
	2, 1: jrpetrolplant_tile_widetank;
	2, 2: jrconcrete_tile;
}

tilelayout jrpetrolplant_tilelayout2 {
	0, 0: jrpetrolplant_tile_distiller;
	0, 1: jrpetrolplant_tile_tallredtanks;
//	0, 2
	1, 0: jrconcrete_tile;
	1, 1: jrpetrolplant_tile_cracker;
	1, 2: jrpetrolplant_tile_cracker;
	2, 0: jrpetrolplant_tile_shed;
	2, 1: jrpetrolplant_tile_widetank;
	2, 2: jrpetrolplant_tile_widetank;
}

INDUSTRY_LOCATION_SWITCHES(IND_PETROL_PLANT)

switch (FEAT_INDUSTRIES, SELF, petrol_plant_water_check, water_distance) {
	0..16: return string(STR_WATER_CHECK_FAILED);
	check_nearby_IND_PETROL_PLANT_industry;
}

// we are repeating the produce block to ensure the perm 8, 9, 10 counts are updated correctly (for debugging)
//produce(industry_petrolplant_cargo_produce, [STORE_PERM(LOAD_PERM(8)+waiting_cargo_1, 8), STORE_PERM(LOAD_PERM(9)+waiting_cargo_2, 9), STORE_PERM(LOAD_PERM(10)+waiting_cargo_3, 10), waiting_cargo_1], waiting_cargo_2, waiting_cargo_3, ((waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)*LOAD_PERM(0x04)+50)/100, ((waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)*LOAD_PERM(0x05)+50)/100, [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), (waiting_cargo_1+waiting_cargo_2+waiting_cargo_3)>0]);
produce(industry_petrolplant_cargo_produce, [COAL: incoming_cargo_waiting("COAL"); OIL_: incoming_cargo_waiting("OIL_"); WOOD: incoming_cargo_waiting("WOOD");], [RFPR: (LOAD_TEMP(2)*LOAD_PERM(0x04)+50)/100; PETR: (LOAD_TEMP(2)*LOAD_PERM(0x05)+50)/100;], [STORE_PERM(1, 0x0F), STORE_PERM(0, 0x00), LOAD_TEMP(2)>0])

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_cargo_arrival, [STORE_TEMP(incoming_cargo_waiting("COAL")+incoming_cargo_waiting("OIL_")+incoming_cargo_waiting("WOOD"), 2), STORE_PERM(LOAD_PERM(8)+incoming_cargo_waiting("COAL"), 8), STORE_PERM(LOAD_PERM(9)+incoming_cargo_waiting("OIL_"), 9), STORE_PERM(LOAD_PERM(10)+incoming_cargo_waiting("WOOD"), 10), 1]) {
    industry_petrolplant_cargo_produce;
}

// need to compensate for the fact that transported_last_month_pcts are really not very responsive/indicative
// previous complicated calcs worked but were not responsive enough
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_update, [STORE_PERM(LOAD_PERM(8)+LOAD_PERM(9)+LOAD_PERM(10), 12), STORE_PERM(0, 8), STORE_PERM(0, 9), STORE_PERM(0, 10), 1]) {
	industry_monthly_prod_change_switch;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_50, [STORE_PERM(50 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(50 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
	industry_petrolplant_calc_output_ratios_update;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_75, [STORE_PERM(75 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(25 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
	industry_petrolplant_calc_output_ratios_update;
}

switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_90, [STORE_PERM(90 + extra_callback_info2%6, 4-LOAD_TEMP(1)), STORE_PERM(10 - extra_callback_info2%6, 5+LOAD_TEMP(1)), 1]) {
	industry_petrolplant_calc_output_ratios_update;
}

//switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_2, abs(transported_last_month_pct_1 - transported_last_month_pct_2)) {
// jrook 20200502
// transported % seems to be in range 0-255 in nml 0.5.0 (fixed in 0.5.1)
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios_2, abs(transported_last_month_pct("RFPR") - transported_last_month_pct("PETR"))) {
	0..10: industry_petrolplant_calc_output_ratios_50; // 0-10
	11..25: industry_petrolplant_calc_output_ratios_75; // 11-25
	26..100: industry_petrolplant_calc_output_ratios_90; // 26-100
	return CB_FAILED;
}

//switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios, STORE_TEMP(transported_last_month_pct_1 >= transported_last_month_pct_2 ? 0 : -1, 1)) {
switch (FEAT_INDUSTRIES, SELF, industry_petrolplant_calc_output_ratios, STORE_TEMP(transported_last_month_pct("RFPR") >= transported_last_month_pct("PETR") ? 0 : -1, 1)) {
	industry_petrolplant_calc_output_ratios_2;
}

if (param_enable_petrol_plant) {

	item (FEAT_INDUSTRIES, industry_petrolplant, IND_PETROL_PLANT) {
		property {
			substitute:		        INDUSTRYTYPE_POWER_PLANT;
			conflicting_ind_types:	[];
			layouts:		        [jrpetrolplant_tilelayout1, jrpetrolplant_tilelayout2];
			life_type:		        IND_LIFE_TYPE_PROCESSING;
			// costs from FIRS 3 oil refinery
			fund_cost_multiplier:	200;
			remove_cost_multiplier:	0;
			cargo_types:            [accept_cargo("COAL"), accept_cargo("OIL_"), accept_cargo("WOOD"), produce_cargo("RFPR", 0), produce_cargo("PETR", 0)];
			min_cargo_distr:	    5;
			prob_map_gen:		    param_manual_placement ? 0 : 2;
			prob_in_game:		    param_manual_placement ? 0 : 2;
			prospect_chance:	    1.0;
			map_colour:		        165;
			name:			        string(STR_PETROL_PLANT_NAME);
			nearby_station_name:	string(STR_PETROL_PLANT_STATION_NAME);
		}
		graphics {
			monthly_prod_change:    industry_petrolplant_calc_output_ratios;
            random_prod_change:     industry_random_prod_change_switch;
            produce_cargo_arrival:	industry_petrolplant_cargo_arrival;
			location_check:		    petrol_plant_water_check;
			colour:			        (founder == 16) ? (grf_future_status("\4A\44\FA\B1") ? COLOUR_MAUVE : COLOUR_BROWN) : founder_colour1;
			cargo_subtype_display:	industry_remove_cargo_text;
		}
	}

}

